apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: kustomize-update-image-tag
spec:
  description: |
    Updates an image tag in a Kustomize kustomization.yaml file,
    commits, and pushes the change back to the Git repo.
  params:
    - name: image-name
      type: string
      description: Full image name (e.g. quay.io/org/app)
    - name: new-tag
      type: string
      description: New image tag to set
    - name: kustomize-dir
      type: string
      description: Path to the kustomization.yaml file directory
      default: "overlays/dev"
    - name: git-user-name
      type: string
      default: "Tekton Bot"
    - name: git-user-email
      type: string
      default: "tekton@bot.local"
    - name: commit-message
      type: string
      default: "chore: update image tag via Tekton"

  workspaces:
    - name: source
      description: The workspace containing the cloned Git repo

  steps:
    - name: update-image
      image: registry.access.redhat.com/ubi9/ubi-minimal:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e

        echo "Updating image tag in $(params.kustomize-dir)/kustomization.yaml"
        cd $(params.kustomize-dir)

        # Ensure yq or sed available
        microdnf install -y kustomize git >/dev/null

        # Show existing images
        echo "Before:"
        kustomize edit list images || true

        # Update image tag
        kustomize edit set image $(params.image-name)=$(params.image-name):$(params.new-tag)

        echo "After:"
        kustomize edit list images

    - name: commit-and-push
      image: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel9@sha256:8f0494341244a75546a4b80b065702be04e6d200421aa4e7ec90385c9dabc6ab
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e

        git config user.name "$(params.git-user-name)"
        git config user.email "$(params.git-user-email)"

        git add $(params.kustomize-dir)/kustomization.yaml

        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "$(params.commit-message): $(params.new-tag)"
          echo "Pushing changes..."
          git push origin HEAD
        fi
